{"version":3,"file":"static/js/743.66936449.chunk.js","mappings":"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","sources":["components/error-message/erroe-message-styled.js","components/error-message/error-message.jsx","components/single-comics/single-comics-styled.js","components/single-comics/single-comics.jsx","hooks/http.hook.js","services/marvel-service.js"],"sourcesContent":["import styled from \"styled-components\";\n\nconst Image = styled.img`\n  display: block; \n  margin: auto auto;\n  width: 150px;\n  height: 150px;\n`;\n\nexport { Image };\n","import { Image } from \"./erroe-message-styled\";\nimport error from \"./error.gif\";\n\nfunction ErrorMessage() {\n  // return <img src={process.env.PUBLIC_URL + \"/error.gif\"} alt=\"error\" />;\n  return <Image src={error} alt=\"error\" />;\n}\n\nexport default ErrorMessage;\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst SingleComicsWrapper = styled.div`\n  margin-top: 50px;\n  display: ${(props) => (props.$loading ? \"block\" : \"grid\")};\n  grid-template-columns: 293px 550px auto;\n  column-gap: 50px;\n  align-items: start;\n\n  img {\n    width: 293px;\n    height: 450px;\n    object-fit: cover;\n  }\n`;\n\nconst Name = styled.h2`\n  font-weight: bold;\n  font-size: 22px;\n  line-height: 29px;\n`;\n\nconst Description = styled.p`\n  font-size: 18px;\n  line-height: 24px;\n  margin-top: 25px;\n`;\n\nconst Price = styled.p`\n  font-weight: bold;\n  font-size: 24px;\n  line-height: 32px;\n  color: #9f0013;\n  margin-top: 25px;\n`;\n\nconst Back = styled(Link)`\n  justify-self: end;\n  font-weight: bold;\n  font-size: 18px;\n  line-height: 24px;\n`;\n\nexport { SingleComicsWrapper, Name, Description, Price, Back };\n","import {\n  SingleComicsWrapper,\n  Name,\n  Description,\n  Back,\n  Price,\n} from \"./single-comics-styled\";\n\nimport { useParams } from \"react-router-dom\";\nimport useMarvelService from \"../../services/marvel-service.js\";\n\nimport { useState, useEffect } from \"react\";\nimport Spinner from \"../spinner/spinner.jsx\";\nimport ErrorMessage from \"../error-message/error-message.jsx\";\n\nfunction SingleComics() {\n  const { comicsId } = useParams();\n  const [comics, setComics] = useState({});\n\n  const { loading, error, getComics, clearError } = useMarvelService();\n\n  useEffect(() => {\n    updateInfo();\n  }, [comicsId]);\n\n  const onInfoLoaded = (comics) => {\n    setComics(comics);\n  };\n\n  const updateInfo = () => {\n    clearError();\n    getComics(comicsId).then((comics) => {\n      onInfoLoaded(comics);\n    });\n  };\n\n  return (\n    <SingleComicsWrapper $loading={loading || error}>\n      {loading ? (\n        <Spinner />\n      ) : error ? (\n        <ErrorMessage />\n      ) : (\n        <View comics={comics} />\n      )}\n    </SingleComicsWrapper>\n  );\n}\n\nfunction View({ comics }) {\n  const { title, description, thumbnail, price, language, pages } = comics;\n\n  return (\n    <>\n      <img src={thumbnail} alt={title} />\n      <div>\n        <Name>{title}</Name>\n        <Description>\n          {description ? description : \"No description...\"}\n        </Description>\n        <Description>{pages} pages</Description>\n        <Description>Language: {language ? language : \"en-us\"}</Description>\n        <Price>{price}$</Price>\n      </div>\n      <Back to=\"/comics\">Back to all</Back>\n    </>\n  );\n}\n\nexport default SingleComics;\n","import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const request = useCallback(\n    async (url, headers, method = \"GET\", body = null) => {\n      setLoading(true);\n\n      try {\n        let headersOBJ;\n\n        if (headers === true) {\n          headersOBJ = { \"Content-Type\": \"application/json\" };\n        }\n\n        const response = await fetch(url, { method, body, headersOBJ });\n\n        if (!response.ok) {\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n        }\n\n        const data = await response.json();\n\n        setLoading(false);\n        return data;\n      } catch (e) {\n        setLoading(false);\n        setError(e.message);\n        throw e;\n      }\n    },\n    []\n  );\n\n  const clearError = useCallback(() => setError(null), []);\n\n  return { loading, request, error, clearError };\n};\n","import { useHttp } from \"../hooks/http.hook\";\nimport { useState } from \"react\";\n\nconst useMarvelService = () => {\n  const { loading, request, error, clearError } = useHttp();\n  const [isFallback, setIsFallBack] = useState(false);\n\n  const _API = {\n    base: \"https://gateway.marvel.com/v1/public/\",\n    fallback: \"https://marvel-server-zeta.vercel.app/\",\n    key: `apikey=${process.env.REACT_APP_PUBLIC_API_KEY}`,\n    fallbackKey: `apikey=${process.env.REACT_APP_FALLBACK_API_KEY}`,\n    baseOffset: 0,\n  };\n\n  const getAllCharacters = async (offset = _API.baseOffset, limit = 9) => {\n    try {\n      const res = await request(\n        `${_API.base}characters?limit=${limit}&offset=${offset}&${_API.key}`,\n        true\n      );\n      setIsFallBack(false);\n      return res.data.results.map(_transfromCharacter);\n    } catch {\n      clearError();\n      const res = await request(\n        `${_API.fallback}characters?limit=${limit}&${_API.fallbackKey}`\n      );\n      setIsFallBack(true);\n      return res.data.results.map(_transfromCharacter);\n    }\n  };\n\n  const getCharacter = async (id) => {\n    try {\n      const res = await request(\n        `${_API.base}characters/${id}?${_API.key}`,\n        true\n      );\n      return _transfromCharacter(res.data.results[0]);\n    } catch {\n      clearError();\n      const res = await request(\n        `${_API.fallback}characters/${id}?${_API.fallbackKey}`\n      );\n      return _transfromCharacter(res.data.results[0]);\n    }\n  };\n\n  const getCharacterByName = async (name) => {\n    try {\n      const res = await request(\n        `${_API.base}characters?name=${name}&${_API.key}`,\n        true\n      );\n      return _transfromCharacter(res.data.results[0]);\n    } catch {\n      clearError();\n      const res = await request(\n        `${_API.fallback}characters?name=${name}&${_API.fallbackKey}`\n      );\n      return _transfromCharacter(res.data.results[0]);\n    }\n  };\n\n  const getRandomCharacter = async () => {\n    try {\n      const id = Math.floor(Math.random() * 400) + 1011000;\n      const res = await request(\n        `${_API.base}characters/${id}?${_API.key}`,\n        true\n      );\n      return _transfromCharacter(res.data.results[0]);\n    } catch {\n      clearError();\n      const fallbackId = Math.floor(Math.random() * 20) + 1;\n      const res = await request(\n        `${_API.fallback}characters/${fallbackId}?${_API.fallbackKey}`\n      );\n      return _transfromCharacter(res.data.results[0]);\n    }\n  };\n\n  const getAllComics = async (offset = _API.baseOffset, limit = 8) => {\n    try {\n      const res = await request(\n        `${_API.base}comics/?limit=${limit}&offset=${offset}&${_API.key}`,\n        true\n      );\n      setIsFallBack(false);\n      return res.data.results.map(_transfromComics);\n    } catch {\n      clearError();\n      const res = await request(\n        `${_API.fallback}comics/?limit=${limit}&${_API.fallbackKey}`\n      );\n      setIsFallBack(true);\n      return res.data.results.map(_transfromComics);\n    }\n  };\n\n  const getComics = async (id) => {\n    try {\n      const res = await request(`${_API.base}comics/${id}?${_API.key}`, true);\n      return _transfromComics(res.data.results[0]);\n    } catch {\n      clearError();\n      const res = await request(\n        `${_API.fallback}comics/${id}?${_API.fallbackKey}`\n      );\n      return _transfromComics(res.data.results[0]);\n    }\n  };\n\n  const _transfromCharacter = (char) => {\n    if (!char) {\n      return null;\n    }\n\n    return {\n      id: char.id,\n      name: char.name,\n      description: char.description,\n      thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\n      homepage: char.urls?.[0]?.url,\n      wiki: char.urls?.[1]?.url,\n      comics: char.comics?.items,\n    };\n  };\n\n  const _transfromComics = (comics) => {\n    if (!comics) {\n      return null;\n    }\n\n    return {\n      id: comics.id,\n      title: comics.title,\n      description: comics.description,\n      thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n      language: comics.textObjects.languages,\n      price: comics.prices[0].price,\n      pages: comics.pageCount,\n    };\n  };\n\n  return {\n    loading,\n    error,\n    getAllCharacters,\n    getCharacter,\n    getCharacterByName,\n    getRandomCharacter,\n    getAllComics,\n    getComics,\n    clearError,\n    isFallback,\n  };\n};\n\nexport default useMarvelService;\n"],"names":["Image","styled","img","_templateObject","_taggedTemplateLiteral","_jsx","src","error","alt","SingleComicsWrapper","div","props","$loading","Name","h2","_templateObject2","Description","p","_templateObject3","Price","_templateObject4","Back","Link","_templateObject5","View","_ref","comics","title","description","thumbnail","price","language","pages","_jsxs","_Fragment","children","to","comicsId","useParams","setComics","useState","loading","getComics","clearError","useMarvelService","useEffect","updateInfo","then","onInfoLoaded","Spinner","ErrorMessage","request","useHttp","setLoading","setError","useCallback","async","url","headers","method","arguments","length","undefined","body","headersOBJ","response","fetch","ok","Error","concat","status","data","json","e","message","isFallback","setIsFallBack","_API","base","fallback","key","process","fallbackKey","baseOffset","_transfromCharacter","char","_char$urls","_char$urls$","_char$urls2","_char$urls2$","_char$comics","id","name","path","extension","homepage","urls","wiki","items","_transfromComics","textObjects","languages","prices","pageCount","getAllCharacters","offset","limit","res","results","map","_unused","getCharacter","_unused2","getCharacterByName","_unused3","getRandomCharacter","Math","floor","random","_unused4","fallbackId","getAllComics","_unused5","_unused6"],"sourceRoot":""}