{"version":3,"file":"static/js/157.c425f7e0.chunk.js","mappings":"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","sources":["components/error-message/erroe-message-styled.js","components/error-message/error-message.jsx","style/button/button-styled.js","hooks/http.hook.js","services/marvel-service.js","components/random-char/random-char-styled.js","components/random-char/random-char.jsx","components/character-info/character-info-styled.js","components/skeleton/skeleton-styled.js","components/skeleton/skeleton.jsx","components/character-info/character-info.jsx","components/characters-list/characters-list-styled.js","components/characters-list/characters-list.jsx","components/error-boundary/error-boundary.jsx","components/character-search/character-search-styled.js","components/character-search/character-search.jsx","components/pages/main-page.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nconst Image = styled.img`\n  display: block; \n  margin: auto auto;\n  width: 150px;\n  height: 150px;\n`;\n\nexport { Image };\n","import { Image } from \"./erroe-message-styled\";\nimport error from \"./error.gif\";\n\nfunction ErrorMessage() {\n  // return <img src={process.env.PUBLIC_URL + \"/error.gif\"} alt=\"error\" />;\n  return <Image src={error} alt=\"error\" />;\n}\n\nexport default ErrorMessage;\n","// Button.js\nimport styled from \"styled-components\";\n\nconst getColors = (type) => {\n  if (type === \"secondary\") {\n    return {\n      bg: \"#5c5c5c\",\n      border: \"#5c5c5c\",\n    };\n  }\n\n  return {\n    bg: \"#9f0013\",\n    border: \"#9f0013\",\n  };\n};\n\nconst Button = styled.a`\n  min-width: 101px;\n  color: #fff;\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 14px;\n  transition: 0.3s transform;\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n  display: inline-block;\n  ${(props) =>\n    props.disabled\n      ? `\n    pointer-events: none;\n    filter: grayscale(0.5);`\n      : null}\n\n  &:hover {\n    transform: translateY(-5px);\n  }\n\n  &::before,\n  &::after {\n    content: \"\";\n    display: block;\n    height: 10px;\n    transition: none;\n  }\n\n  &::before {\n    margin-left: 10px;\n    background-color: ${({ $type }) => getColors($type).bg};\n  }\n\n  &::after {\n    margin-right: 10px;\n    background-color: ${({ $type }) => getColors($type).bg};\n  }\n\n  .inner {\n    position: relative;\n    background-color: ${({ $type }) => getColors($type).bg};\n    line-height: 18px;\n    padding: 0 18px;\n    transition: none;\n\n    &::before,\n    &::after {\n      content: \"\";\n      position: absolute;\n      border-color: ${({ $type }) => getColors($type).border} transparent;\n      border-style: solid;\n      border-width: 0 0 10px 10px;\n      display: block;\n      transition: none;\n    }\n\n    &::before {\n      top: -10px;\n      left: 0;\n    }\n\n    &::after {\n      bottom: -10px;\n      right: 0;\n      transform: rotate(180deg);\n    }\n  }\n`;\n\nconst ButtonLong = styled(Button)`\ndisplay: block;\n  width: 170px;\n  margin: 45px auto 0 auto;\n`;\n\nexport { Button, ButtonLong };\n","import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const request = useCallback(\n    async (url, headers, method = \"GET\", body = null) => {\n      setLoading(true);\n\n      try {\n        let headersOBJ;\n\n        if (headers === true) {\n          headersOBJ = { \"Content-Type\": \"application/json\" };\n        }\n\n        const response = await fetch(url, { method, body, headersOBJ });\n\n        if (!response.ok) {\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n        }\n\n        const data = await response.json();\n\n        setLoading(false);\n        return data;\n      } catch (e) {\n        setLoading(false);\n        setError(e.message);\n        throw e;\n      }\n    },\n    []\n  );\n\n  const clearError = useCallback(() => setError(null), []);\n\n  return { loading, request, error, clearError };\n};\n","import { useHttp } from \"../hooks/http.hook\";\nimport { useState } from \"react\";\n\nconst useMarvelService = () => {\n  const { loading, request, error, clearError } = useHttp();\n\n  const _API = {\n    base: \"https://gateway.marvel.com/v1/public/\",\n    fallback: \"https://marvel-server-zeta.vercel.app/\",\n    key: `apikey=${process.env.REACT_APP_PUBLIC_API_KEY}`,\n    fallbackKey: `apikey=${process.env.REACT_APP_FALLBACK_API_KEY}`,\n    baseOffset: 0,\n  };\n\n  const getAllCharacters = async (offset = _API.baseOffset, limit = 9) => {\n    try {\n      const res = await request(\n        `${_API.base}characters?limit=${limit}&offset=${offset}&${_API.key}`,\n        true\n      );\n      return res.data.results.map(_transfromCharacter);\n    } catch {\n      clearError();\n      const res = await request(\n        `${_API.fallback}characters?limit=${limit}&${_API.fallbackKey}`\n      );\n      return res.data.results.map(_transfromCharacter);\n    }\n  };\n\n  const getCharacter = async (id) => {\n    try {\n      const res = await request(\n        `${_API.base}characters/${id}?${_API.key}`,\n        true\n      );\n      return _transfromCharacter(res.data.results[0]);\n    } catch {\n      clearError();\n      const res = await request(\n        `${_API.fallback}characters/${id}?${_API.fallbackKey}`\n      );\n      return _transfromCharacter(res.data.results[0]);\n    }\n  };\n\n  const getCharacterByName = async (name) => {\n    try {\n      const res = await request(\n        `${_API.base}characters?name=${name}&${_API.key}`,\n        true\n      );\n      return _transfromCharacter(res.data.results[0]);\n    } catch {\n      clearError();\n      const res = await request(\n        `${_API.fallback}characters?name=${name}&${_API.fallbackKey}`\n      );\n      return _transfromCharacter(res.data.results[0]);\n    }\n  };\n\n  const getRandomCharacter = async () => {\n    try {\n      const id = Math.floor(Math.random() * 400) + 1011000;\n      const res = await request(\n        `${_API.base}characters/${id}?${_API.key}`,\n        true\n      );\n      return _transfromCharacter(res.data.results[0]);\n    } catch {\n      clearError();\n      const fallbackId = Math.floor(Math.random() * 20) + 1;\n      const res = await request(\n        `${_API.fallback}characters/${fallbackId}?${_API.fallbackKey}`\n      );\n      return _transfromCharacter(res.data.results[0]);\n    }\n  };\n\n  const getAllComics = async (offset = _API.baseOffset, limit = 8) => {\n    try {\n      const res = await request(\n        `${_API.base}comics/?limit=${limit}&offset=${offset}&${_API.key}`,\n        true\n      );\n      return res.data.results.map(_transfromComics);\n    } catch {\n      clearError();\n      const res = await request(\n        `${_API.fallback}comics/?limit=${limit}&${_API.fallbackKey}`\n      );\n      return res.data.results.map(_transfromComics);\n    }\n  };\n\n  const getComics = async (id) => {\n    try {\n      const res = await request(`${_API.base}comics/${id}?${_API.key}`, true);\n      return _transfromComics(res.data.results[0]);\n    } catch {\n      clearError();\n      const res = await request(\n        `${_API.fallback}comics/${id}?${_API.fallbackKey}`\n      );\n      return _transfromComics(res.data.results[0]);\n    }\n  };\n\n  const _transfromCharacter = (char) => {\n    if (!char) {\n      return null;\n    }\n\n    return {\n      id: char.id,\n      name: char.name,\n      description: char.description,\n      thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\n      homepage: char.urls?.[0]?.url,\n      wiki: char.urls?.[1]?.url ,\n      comics: char.comics?.items ,\n    };\n  };\n\n  const _transfromComics = (comics) => ({\n    id: comics.id,\n    title: comics.title,\n    description: comics.description,\n    thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n    language: comics.textObjects.languages,\n    price: comics.prices[0].price,\n    pages: comics.pageCount,\n  });\n\n  return {\n    loading,\n    error,\n    getAllCharacters,\n    getCharacter,\n    getCharacterByName,\n    getRandomCharacter,\n    getAllComics,\n    getComics,\n    clearError,\n  };\n};\n\nexport default useMarvelService;\n","import styled from \"styled-components\";\n\nconst RandomCharWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 50%);\n  box-shadow: 5px 5px 20px rgba(0, 0, 0, 0.25);\n`;\n\nconst ButtonsWrapper = styled.div`\n  a:nth-child(1) {\n    margin-right: 30px;\n  }\n`;\n\nconst Dynamic = styled.div`\n  padding: 40px 35px;\n  display: grid;\n  grid-template-columns: 180px auto;\n  column-gap: 30px;\n`;\n\nconst Static = styled.div`\n  padding: 40px 35px;\n  background-color: #232222;\n  position: relative;\n`;\n\nconst Image = styled.img`\n  width: 180px;\n  height: 180px;\n  object-fit: ${(props) => (props.$contain ? \"contain\" : \"cover\")};\n`;\n\nconst Decoration = styled.img`\n  position: absolute;\n  bottom: 14px;\n  right: -37px;\n`;\n\nconst Info = styled.div`\n  display: grid;\n  grid-template-rows: minmax(29px, auto) 90px 38px;\n  row-gap: 10px;\n  padding-top: 3px;\n`;\n\nconst Name = styled.p`\n  font-weight: bold;\n  font-size: 22px;\n  line-height: 29px;\n  text-transform: uppercase;\n`;\n\nconst Description = styled.p`\n  font-size: 14px;\n  line-height: 18px;\n`;\n\nconst Title = styled.p`\n  font-weight: bold;\n  font-size: 24px;\n  line-height: 32px;\n  letter-spacing: -0.045em;\n  color: #ffffff;\n\n  &:nth-child(2) {\n    margin: 20px 0;\n  }\n`;\n\nexport {\n  RandomCharWrapper,\n  Dynamic,\n  Image,\n  Info,\n  Name,\n  Description,\n  ButtonsWrapper,\n  Static,\n  Title,\n  Decoration,\n};\n","import { useState, useEffect, useRef } from \"react\";\nimport { CSSTransition, SwitchTransition } from \"react-transition-group\";\nimport {\n  RandomCharWrapper,\n  Dynamic,\n  Image,\n  Info,\n  Name,\n  Description,\n  ButtonsWrapper,\n  Static,\n  Title,\n  Decoration,\n} from \"./random-char-styled\";\nimport { Button } from \"../../style/button/button-styled.js\";\nimport \"./random-char.css\";\nimport mjolnir from \"../../resources/img/mjolnir.png\";\nimport Spinner from \"../spinner/spinner\";\nimport ErrorMessage from \"../error-message/error-message.jsx\";\nimport useMarvelService from \"../../services/marvel-service.js\";\n\nconst RandomChar = () => {\n  const [char, setChar] = useState(null); // Initialize as null\n  const [transitionKey, setTransitionKey] = useState(0);\n  const nodeRef = useRef(null);\n\n  const { loading, error, getRandomCharacter, clearError } = useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n    // const intervalId = setInterval(updateChar, 5000);\n    // return () => clearInterval(intervalId);\n  }, []);\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n    setTransitionKey((prev) => prev + 1);\n  };\n\n  const updateChar = () => {\n    clearError();\n    getRandomCharacter().then(onCharLoaded);\n  };\n\n  return (\n    <RandomCharWrapper>\n      <SwitchTransition mode=\"out-in\">\n        <CSSTransition\n          key={loading ? \"loading\" : error ? \"error\" : transitionKey}\n          timeout={200}\n          classNames=\"char\"\n          nodeRef={nodeRef}\n        >\n          <div ref={nodeRef}>\n            {loading ? (\n              <Spinner />\n            ) : error ? (\n              <ErrorMessage />\n            ) : (\n              <View\n                char={char}\n                animation={{ transitionKey, loading, error, nodeRef }}\n              />\n            )}\n          </div>\n        </CSSTransition>\n      </SwitchTransition>\n      <Static>\n        <Title>\n          Random character for today!\n          <br />\n          Do you want to get to know him better?\n        </Title>\n        <Title>Or choose another one</Title>\n        <Button onClick={updateChar} href=\"#\" $type=\"main\">\n          <div className=\"inner\">try it</div>\n        </Button>\n        <Decoration src={mjolnir} alt=\"mjolnir\" />\n      </Static>\n    </RandomCharWrapper>\n  );\n};\n\nfunction View({ char, animation }) {\n  const { name, description, thumbnail, homepage, wiki } = char || {};\n\n  const shorten = (text, max = 250) =>\n    text && text.length > max ? text.slice(0, max) + \"...\" : text;\n\n  const noImage =\n    thumbnail &&\n    thumbnail ===\n      \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\";\n\n  return (\n    <Dynamic>\n      <Image src={thumbnail || \"\"} alt=\"Random character\" $contain={noImage} />\n      <Info>\n        <Name>{name || \"Unknown\"}</Name>\n        <Description>\n          {description ? shorten(description) : \"No description...\"}\n        </Description>\n        <ButtonsWrapper>\n          <Button href={homepage || \"#\"} $type=\"main\">\n            <div className=\"inner\">homepage</div>\n          </Button>\n          <Button href={wiki || \"#\"} $type=\"secondary\">\n            <div className=\"inner\">Wiki</div>\n          </Button>\n        </ButtonsWrapper>\n      </Info>\n    </Dynamic>\n  );\n}\n\nexport default RandomChar;","import styled from \"styled-components\";\n\nconst CharacterInfoWrapper = styled.div`\n  padding: 25px;\n  box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.25);\n  background-color: #fff;\n`;\n\nconst BasicsWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 150px auto;\n  column-gap: 25px;\n\n  img {\n    width: 150px;\n    height: 150px;\n    object-fit: ${(props) => (props.$contain ? \"contain\" : \"cover\")};\n  }\n`;\n\nconst ButtonsWrapper = styled.div`\n  margin-top: 35px;\n\n  a:nth-child(2) {\n    margin-top: 10px;\n  }\n`;\n\nconst Description = styled.p`\n  margin-top: 15px;\n  font-size: 14px;\n  line-height: 18px;\n`;\n\nconst ComicsLabel = styled.div`\n  font-weight: bold;\n  font-size: 18px;\n  line-height: 24px;\n  margin-top: 10px;\n`;\n\nconst ComicsList = styled.ul`\n  position: relative;\n  margin-top: 10px;\n`;\n\nconst ComicsItem = styled.li`\n  width: 100%;\n  padding: 0px 10px;\n  line-height: 25px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  margin-top: 10px;\n`;\n\nexport {\n  CharacterInfoWrapper,\n  BasicsWrapper,\n  ButtonsWrapper,\n  Description,\n  ComicsLabel,\n  ComicsList,\n  ComicsItem,\n};\n","import { keyframes, styled } from \"styled-components\";\n\nconst animation = keyframes`\n  0% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.4;\n  }\n  100% {\n    opacity: 1;\n  }\n`;\n\nconst Pulse = styled.div`\n  animation: ${animation} 1.5s ease-in-out 0.5s infinite;\n`;\n\nconst Header = styled.div`\n  display: grid;\n  grid-template-columns: 40px auto;\n  column-gap: 10px;\n  align-items: center;\n`;\n\nconst Circle = styled(Pulse)`\n  width: 40px;\n  height: 40px;\n  background-color: #c4c4c4;\n  border-radius: 100%;\n`;\n\nconst Mini = styled(Pulse)`\n  width: 100%;\n  height: 16px;\n  background-color: #c4c4c4;\n`;\n\nconst Block = styled(Pulse)`\n  height: 35px;\n  width: 100%;\n  background-color: #c4c4c4;\n  margin-top: 15px;\n`;\n\nconst Title = styled.h2`\n  font-size: 20px;\n  text-align: center;\n  margin-bottom: 15px;\n`;\n\nexport { Header, Circle, Mini, Block, Title };\n","import { Header, Circle, Mini, Block, Title } from \"./skeleton-styled\";\n\nfunction Skeleton() {\n  return (\n    <div>\n      <Title>Please select a character</Title>\n      <Header>\n        <Circle></Circle>\n        <Mini></Mini>\n      </Header>\n      <Block></Block>\n      <Block></Block>\n      <Block></Block>\n    </div>\n  );\n}\n\nexport default Skeleton;\n","import {\n  CharacterInfoWrapper,\n  BasicsWrapper,\n  ButtonsWrapper,\n  Description,\n  ComicsLabel,\n  ComicsList,\n  ComicsItem,\n} from \"./character-info-styled\";\nimport { Name } from \"../random-char/random-char-styled\";\nimport { Button } from \"../../style/button/button-styled.js\";\n\nimport Skeleton from \"../skeleton/skeleton\";\nimport ErrorMessage from \"../error-message/error-message.jsx\";\n\nimport PropTypes from \"prop-types\";\n\nimport useMarvelService from \"../../services/marvel-service.js\";\n\nimport { useState, useEffect } from \"react\";\n\nconst CharacterInfo = ({ selectedId }) => {\n  const [char, setChar] = useState({});\n\n  const { loading, error, getCharacter, clearError } = useMarvelService();\n\n  useEffect(() => {\n    if (selectedId) {\n      updateInfo(selectedId);\n    }\n  }, [selectedId]);\n\n  const onInfoLoaded = (char) => {\n    setChar(char);\n  };\n\n  const updateInfo = (id) => {\n    clearError();\n    getCharacter(id).then((char) => {\n      onInfoLoaded(char);\n    });\n  };\n\n  const { comics } = char;\n\n  const items = comics\n    ?.slice(0, 10)\n    .map((item, i) => (\n      <ComicsItem key={i}>\n        {typeof item === \"string\" ? item : item.name}\n      </ComicsItem>\n    ));\n\n  return (\n    <CharacterInfoWrapper>\n      {!items || loading ? (\n        <Skeleton />\n      ) : error ? (\n        <ErrorMessage />\n      ) : (\n        <View char={char} items={items} />\n      )}\n    </CharacterInfoWrapper>\n  );\n};\n\nfunction View({\n  char: { thumbnail, name, homepage, wiki, description },\n  items,\n}) {\n  const noImage =\n    thumbnail ===\n    \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\";\n\n  return (\n    <>\n      <BasicsWrapper $contain={noImage}>\n        <img src={thumbnail} alt=\"abyss\" />\n        <div>\n          <Name>{name}</Name>\n          <ButtonsWrapper>\n            <Button href={homepage} $type=\"main\">\n              <div className=\"inner\">homepage</div>\n            </Button>\n            <Button href={wiki} $type=\"secondary\">\n              <div className=\"inner\">Wiki</div>\n            </Button>\n          </ButtonsWrapper>\n        </div>\n      </BasicsWrapper>\n      <Description>\n        {description ? description : \"No description...\"}\n      </Description>\n      <ComicsLabel>Comics:</ComicsLabel>\n      <ComicsList>\n        {items && items.length > 0 ? items : \"No comics...\"}\n      </ComicsList>\n    </>\n  );\n}\n\nCharacterInfo.propTypes = {\n  selectedId: PropTypes.number.isRequired,\n};\n\nexport default CharacterInfo;\n","import styled from \"styled-components\";\nimport { Name as NameSuper } from \"../random-char/random-char-styled\";\n\nconst Grid = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(3, 200px);\n  column-gap: 25px;\n  row-gap: 30px;\n`;\n\nconst Item = styled.li`\n  width: 200px;\n  height: 318px;\n  background-color: #232222;\n  box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.25);\n  padding: 15px;\n  cursor: pointer;\n  transition: 0.3s transform;\n\n  img {\n    width: 200px;\n    height: 200px;\n    object-fit: ${(props) => (props.$fill ? \"fill\" : \"cover\")};\n    transform: translate(-15px, -15px);\n  }\n\n  &.selected {\n    box-shadow: 0 5px 20px #9f0013;\n    transform: translateY(-8px);\n  }\n`;\n\nconst Name = styled(NameSuper)`\n  color: #fff;\n`;\n\nexport { Grid, Item, Name };\n","import { Grid, Item, Name } from \"./characters-list-styled\";\nimport { ButtonLong } from \"../../style/button/button-styled\";\n\nimport Spinner from \"../spinner/spinner\";\nimport ErrorMessage from \"../error-message/error-message.jsx\";\n\nimport useMarvelService from \"../../services/marvel-service.js\";\n\nimport PropTypes from \"prop-types\";\n\nimport { useState, useEffect, useRef } from \"react\";\n\nconst CharacterList = (props) => {\n  const { loading, error, getAllCharacters, isFallback } = useMarvelService();\n\n  const [charList, setCharList] = useState([]);\n  const [loadingNewItem, setloadingNewItem] = useState(false);\n  const [offset, setOffset] = useState(291);\n  const [charEnded, setCharEnded] = useState(false);\n\n  const { onSelectChar } = props;\n\n  const itemRefs = useRef([]);\n\n  useEffect(() => {\n    onRequest(offset, true);\n    // Can invoke arrow function because CallBack is invoked after render\n  }, []);\n\n  const onListLoaded = (res) => {\n    let ended = false;\n    if (res.length < 9) {\n      ended = true;\n    }\n\n    setCharList((prevCharList) => [...prevCharList, ...res]);\n    setloadingNewItem(false);\n    setOffset((prevOffset) => prevOffset + 9);\n    setCharEnded(ended);\n  };\n\n  const onRequest = (offset, initial) => {\n    initial ? setloadingNewItem(false) : setloadingNewItem(true);\n    getAllCharacters(offset).then(onListLoaded);\n  };\n\n  const items = charList.map(({ id, name, thumbnail }, index) => {\n    const noImage =\n      thumbnail ===\n      \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\";\n\n    // ref is not recommended because of declarative style of react\n    // className={selectedId === id ? \"selected\" : \"\"} is better\n    return (\n      <Item\n        ref={(el) => (itemRefs.current[index] = el)}\n        onClick={() => {\n          onSelectChar(id);\n          itemRefs.current.forEach((ref) => ref?.classList.remove(\"selected\"));\n          itemRefs.current[index]?.classList.add(\"selected\");\n        }}\n        $fill={noImage}\n        key={id}\n      >\n        <img src={thumbnail} alt={name} />\n        <Name>{name}</Name>\n      </Item>\n    );\n  });\n\n  return (\n    <div>\n      {loading && !loadingNewItem ? (\n        <Spinner />\n      ) : error ? (\n        <ErrorMessage />\n      ) : (\n        <Grid>{items}</Grid>\n      )}\n      {charEnded || isFallback ? null : (\n        <ButtonLong\n          onClick={() => onRequest(offset)}\n          disabled={loadingNewItem}\n          $type=\"main\"\n        >\n          <div className=\"inner\">Load More</div>\n        </ButtonLong>\n      )}\n    </div>\n  );\n};\n\nCharacterList.propTypes = {\n  onSelectChar: PropTypes.func.isRequired,\n  selectedId: PropTypes.number.isRequired,\n};\n\nexport default CharacterList;\n","import { Component } from \"react\";\nimport ErrorMessage from \"../error-message/error-message\";\n\nclass ErrorBoundary extends Component {\n  state = {\n    error: false,\n  };\n\n  componentDidCatch(error, errorInfo) {\n    console.log(error, errorInfo);\n    this.setState({ error: true });\n  }\n\n  render() {\n    if (this.state.error) {\n      return <ErrorMessage />;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import styled from \"styled-components\";\n\nconst CharacterSearchWrapper = styled.div`\n  margin-top: 20px;\n  padding: 25px;\n  box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.25);\n  background-color: #fff;\n`;\n\nconst Text = styled.div`\n  font-weight: bold;\n  font-size: 18px;\n  line-height: 24px;\n`;\n\nconst Wrapper = styled.div`\n  margin-top: 10px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Match = styled(Text)`\n  color: #03710e;\n`;\n\nconst Input = styled.input`\n  padding: 15px 20px;\n  width: 225px;\n  border: none;\n  box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.25);\n  background-color: #fff;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst Error = styled.div`\n  margin-top: 20px;\n  font-weight: bold;\n  font-size: 18px;\n  line-height: 24px;\n  margin-bottom: 10px;\n  color: #9f0013;\n`;\n\nexport {\n  CharacterSearchWrapper,\n  Text,\n  Input,\n  Match,\n  Wrapper,\n  Error,\n};\n","import {\n  CharacterSearchWrapper,\n  Text,\n  Input,\n  Error,\n  Match,\n  Wrapper,\n} from \"./character-search-styled\";\nimport { Button } from \"../../style/button/button-styled.js\";\n\nimport * as Yup from \"yup\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\n\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport useMarvelService from \"../../services/marvel-service.js\";\n\nconst CharacterSearch = () => {\n  const { loading, error, getCharacterByName, clearError } = useMarvelService();\n  const [char, setChar] = useState(null);\n  const [submitted, setSubmitted] = useState(false);\n\n  const capitalizeEachWord = (str) => {\n    return str\n      .toLowerCase()\n      .split(\" \")\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(\" \");\n  };\n\n  return (\n    <CharacterSearchWrapper>\n      <Text>Or find a character by name:</Text>\n      <div>\n        <Formik\n          initialValues={{\n            name: \"\",\n          }}\n          validationSchema={Yup.object({\n            name: Yup.string()\n              .min(1, \"Too Short!\")\n              .max(20, \"Too Long!\")\n              .required(\"This field is required\"),\n          })}\n          onSubmit={(values) => {\n            setSubmitted(true);\n            clearError();\n            const name = capitalizeEachWord(values.name.trim());\n            getCharacterByName(name).then((char) => setChar(char));\n          }}\n        >\n          <Form>\n            <Wrapper>\n              <Field\n                as={Input}\n                type=\"text\"\n                placeholder=\"Enter name\"\n                name=\"name\"\n              />\n              <Button as=\"button\" $type=\"main\" type=\"submit\">\n                <div className=\"inner\">FIND</div>\n              </Button>\n            </Wrapper>\n\n            <ErrorMessage component={Error} name=\"name\" />\n\n            {submitted && !char && !loading ? (\n              <Error>\n                The character was not found. Check the name and try again\n              </Error>\n            ) : char && !error ? (\n              <Wrapper>\n                <Match>\n                  There is! Visit{\" \"}\n                  <Link to={`/character/${char.id}`}>{char.name}</Link> page?\n                </Match>\n                <Link to={`/character/${char.id}`}>\n                  <Button $type=\"secondary\">\n                    <div className=\"inner\">TO PAGE</div>\n                  </Button>\n                </Link>\n              </Wrapper>\n            ) : null}\n          </Form>\n        </Formik>\n      </div>\n    </CharacterSearchWrapper>\n  );\n};\n\nexport default CharacterSearch;\n","import RandomChar from \"../random-char/random-char\";\nimport CharacterInfo from \"../character-info/character-info\";\nimport CharacterList from \"../characters-list/characters-list\";\nimport ErrorBoundary from \"../error-boundary/error-boundary\";\n\nimport {\n  CharactersWrapper,\n  Decoration,\n  CharacterInfoWrapper,\n} from \"../app/app-styled.js\";\n\nimport vision from \"../../resources/img/vision.png\";\n\nimport { useState } from \"react\";\nimport CharacterSearch from \"../character-search/character-search.jsx\";\n\nfunction MainPage() {\n  const [selectedId, setSelectedId] = useState(null);\n\n  const onSelectChar = (id) => {\n    setSelectedId(id);\n  };\n\n  return (\n    <>\n      <RandomChar />\n      <CharactersWrapper>\n        <CharacterList onSelectChar={onSelectChar} />\n        <CharacterInfoWrapper>\n          <ErrorBoundary>\n            <CharacterInfo selectedId={selectedId} />\n          </ErrorBoundary>\n          <ErrorBoundary>\n            <CharacterSearch />\n          </ErrorBoundary>\n        </CharacterInfoWrapper>\n      </CharactersWrapper>\n      <Decoration src={vision} />\n    </>\n  );\n}\n\nexport default MainPage;\n"],"names":["Image","styled","img","_templateObject","_taggedTemplateLiteral","_jsx","src","error","alt","getColors","type","bg","border","Button","a","props","disabled","_ref","$type","_ref2","_ref3","_ref4","ButtonLong","_templateObject2","useMarvelService","loading","request","clearError","useHttp","setLoading","useState","setError","useCallback","async","url","headers","method","arguments","length","undefined","body","headersOBJ","response","fetch","ok","Error","concat","status","data","json","e","message","_API","base","fallback","key","process","fallbackKey","baseOffset","_transfromCharacter","char","_char$urls","_char$urls$","_char$urls2","_char$urls2$","_char$comics","id","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","_transfromComics","title","language","textObjects","languages","price","prices","pages","pageCount","getAllCharacters","offset","limit","results","map","_unused","getCharacter","res","_unused2","getCharacterByName","_unused3","getRandomCharacter","Math","floor","random","_unused4","fallbackId","getAllComics","_unused5","getComics","_unused6","RandomCharWrapper","div","ButtonsWrapper","Dynamic","_templateObject3","Static","_templateObject4","_templateObject5","$contain","Decoration","_templateObject6","Info","_templateObject7","Name","p","_templateObject8","Description","_templateObject9","Title","_templateObject0","View","animation","noImage","_jsxs","children","text","max","slice","shorten","href","className","RandomChar","setChar","transitionKey","setTransitionKey","nodeRef","useRef","useEffect","updateChar","onCharLoaded","prev","then","SwitchTransition","mode","CSSTransition","timeout","classNames","ref","Spinner","ErrorMessage","onClick","mjolnir","CharacterInfoWrapper","BasicsWrapper","ComicsLabel","ComicsList","ul","ComicsItem","li","keyframes","Pulse","Header","Circle","Mini","Block","h2","_Fragment","selectedId","updateInfo","onInfoLoaded","item","i","Skeleton","Grid","Item","$fill","NameSuper","isFallback","charList","setCharList","loadingNewItem","setloadingNewItem","setOffset","charEnded","setCharEnded","onSelectChar","itemRefs","onRequest","onListLoaded","ended","prevCharList","prevOffset","initial","index","el","current","_itemRefs$current$ind","forEach","classList","remove","add","ErrorBoundary","Component","constructor","state","componentDidCatch","errorInfo","console","log","this","setState","render","CharacterSearchWrapper","Text","Wrapper","Match","Input","input","CharacterSearch","submitted","setSubmitted","Formik","initialValues","validationSchema","Yup","min","required","onSubmit","values","trim","toLowerCase","split","word","charAt","toUpperCase","join","Form","Field","as","placeholder","component","Link","to","setSelectedId","CharactersWrapper","CharacterList","CharacterInfo","vision"],"sourceRoot":""}