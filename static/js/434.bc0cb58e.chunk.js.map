{"version":3,"file":"static/js/434.bc0cb58e.chunk.js","mappings":"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","sources":["components/error-message/erroe-message-styled.js","components/error-message/error-message.jsx","components/single-character/single-character-styled.js","components/single-character/single-character.jsx","hooks/http.hook.js","services/marvel-service.js"],"sourcesContent":["import styled from \"styled-components\";\n\nconst Image = styled.img`\n  display: block; \n  margin: auto auto;\n  width: 150px;\n  height: 150px;\n`;\n\nexport { Image };\n","import { Image } from \"./erroe-message-styled\";\nimport error from \"./error.gif\";\n\nfunction ErrorMessage() {\n  // return <img src={process.env.PUBLIC_URL + \"/error.gif\"} alt=\"error\" />;\n  return <Image src={error} alt=\"error\" />;\n}\n\nexport default ErrorMessage;\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst SingleCharacterWrapper = styled.div`\n  margin-top: 50px;\n  display: ${(props) => (props.$loading ? \"block\" : \"grid\")};\n  grid-template-columns: 293px 550px auto;\n  column-gap: 50px;\n  align-items: start;\n\n  img {\n    width: 293px;\n    height: 450px;\n    object-fit: cover center;\n  }\n`;\n\nconst Name = styled.h2`\n  font-weight: bold;\n  font-size: 22px;\n  line-height: 29px;\n`;\n\nconst Description = styled.p`\n  font-size: 18px;\n  line-height: 24px;\n  margin-top: 25px;\n`;\n\n\nconst Back = styled(Link)`\n  justify-self: end;\n  font-weight: bold;\n  font-size: 18px;\n  line-height: 24px;\n`;\n\nexport { SingleCharacterWrapper, Name, Description, Back };\n","import {\n  SingleCharacterWrapper,\n  Name,\n  Description,\n  Back,\n} from \"./single-character-styled.js\";\n\nimport { useParams } from \"react-router-dom\";\nimport useMarvelService from \"../../services/marvel-service.js\";\n\nimport { useState, useEffect } from \"react\";\nimport Spinner from \"../spinner/spinner.jsx\";\nimport ErrorMessage from \"../error-message/error-message.jsx\";\n\nfunction SingleCharacter() {\n  const { characterId } = useParams();\n  const [char, setChar] = useState({});\n\n  const { loading, error, getCharacter, clearError } = useMarvelService();\n\n  useEffect(() => {\n    updateInfo();\n  }, [characterId]);\n\n  const onInfoLoaded = (char) => {\n    setChar(char);\n  };\n\n  const updateInfo = () => {\n    clearError();\n    getCharacter(characterId).then((char) => {\n      onInfoLoaded(char);\n    });\n  };\n\n  return (\n    <SingleCharacterWrapper $loading={loading || error}>\n      {loading ? (\n        <Spinner />\n      ) : error ? (\n        <ErrorMessage />\n      ) : (\n        <View char={char} />\n      )}\n    </SingleCharacterWrapper>\n  );\n}\n\nfunction View({ char }) {\n  const { name, description, thumbnail } = char;\n\n  return (\n    <>\n      <img src={thumbnail} alt={name} />\n      <div>\n        <Name>{name}</Name>\n        <Description>\n          {description ? description : \"No description...\"}\n        </Description>\n      </div>\n      <Back to=\"/\">Back to main</Back>\n    </>\n  );\n}\n\nexport default SingleCharacter;\n","import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const request = useCallback(\n    async (url, headers, method = \"GET\", body = null) => {\n      setLoading(true);\n\n      try {\n        let headersOBJ;\n\n        if (headers === true) {\n          headersOBJ = { \"Content-Type\": \"application/json\" };\n        }\n\n        const response = await fetch(url, { method, body, headersOBJ });\n\n        if (!response.ok) {\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n        }\n\n        const data = await response.json();\n\n        setLoading(false);\n        return data;\n      } catch (e) {\n        setLoading(false);\n        setError(e.message);\n        throw e;\n      }\n    },\n    []\n  );\n\n  const clearError = useCallback(() => setError(null), []);\n\n  return { loading, request, error, clearError };\n};\n","import { useHttp } from \"../hooks/http.hook\";\nimport { useState } from \"react\";\n\nconst useMarvelService = () => {\n  const { loading, request, error, clearError } = useHttp();\n  const [ isFallback, setIsFallBack ] = useState(false);\n\n  const _API = {\n    base: \"https://gateway.marvel.com/v1/public/\",\n    fallback: \"https://marvel-server-zeta.vercel.app/\",\n    key: `apikey=${process.env.REACT_APP_PUBLIC_API_KEY}`,\n    fallbackKey: `apikey=${process.env.REACT_APP_FALLBACK_API_KEY}`,\n    baseOffset: 0,\n  };\n\n  const getAllCharacters = async (offset = _API.baseOffset, limit = 9) => {\n    try {\n      const res = await request(\n        `${_API.base}characters?limit=${limit}&offset=${offset}&${_API.key}`,\n        true\n      );\n      setIsFallBack(false);\n      return res.data.results.map(_transfromCharacter);\n    } catch {\n      clearError();\n      const res = await request(\n        `${_API.fallback}characters?limit=${limit}&${_API.fallbackKey}`\n      );\n      setIsFallBack(true);\n      return res.data.results.map(_transfromCharacter);\n    }\n  };\n\n  const getCharacter = async (id) => {\n    try {\n      const res = await request(\n        `${_API.base}characters/${id}?${_API.key}`,\n        true\n      );\n      return _transfromCharacter(res.data.results[0]);\n    } catch {\n      clearError();\n      const res = await request(\n        `${_API.fallback}characters/${id}?${_API.fallbackKey}`\n      );\n      return _transfromCharacter(res.data.results[0]);\n    }\n  };\n\n  const getCharacterByName = async (name) => {\n    try {\n      const res = await request(\n        `${_API.base}characters?name=${name}&${_API.key}`,\n        true\n      );\n      return _transfromCharacter(res.data.results[0]);\n    } catch {\n      clearError();\n      const res = await request(\n        `${_API.fallback}characters?name=${name}&${_API.fallbackKey}`\n      );\n      return _transfromCharacter(res.data.results[0]);\n    }\n  };\n\n  const getRandomCharacter = async () => {\n    try {\n      const id = Math.floor(Math.random() * 400) + 1011000;\n      const res = await request(\n        `${_API.base}characters/${id}?${_API.key}`,\n        true\n      );\n      return _transfromCharacter(res.data.results[0]);\n    } catch {\n      clearError();\n      const fallbackId = Math.floor(Math.random() * 20) + 1;\n      const res = await request(\n        `${_API.fallback}characters/${fallbackId}?${_API.fallbackKey}`\n      );\n      return _transfromCharacter(res.data.results[0]);\n    }\n  };\n\n  const getAllComics = async (offset = _API.baseOffset, limit = 8) => {\n    try {\n      const res = await request(\n        `${_API.base}comics/?limit=${limit}&offset=${offset}&${_API.key}`,\n        true\n      );\n      return res.data.results.map(_transfromComics);\n    } catch {\n      clearError();\n      const res = await request(\n        `${_API.fallback}comics/?limit=${limit}&${_API.fallbackKey}`\n      );\n      return res.data.results.map(_transfromComics);\n    }\n  };\n\n  const getComics = async (id) => {\n    try {\n      const res = await request(`${_API.base}comics/${id}?${_API.key}`, true);\n      return _transfromComics(res.data.results[0]);\n    } catch {\n      clearError();\n      const res = await request(\n        `${_API.fallback}comics/${id}?${_API.fallbackKey}`\n      );\n      return _transfromComics(res.data.results[0]);\n    }\n  };\n\n  const _transfromCharacter = (char) => {\n    if (!char) {\n      return null;\n    }\n\n    return {\n      id: char.id,\n      name: char.name,\n      description: char.description,\n      thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\n      homepage: char.urls?.[0]?.url,\n      wiki: char.urls?.[1]?.url,\n      comics: char.comics?.items,\n    };\n  };\n\n  const _transfromComics = (comics) => ({\n    id: comics.id,\n    title: comics.title,\n    description: comics.description,\n    thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n    language: comics.textObjects.languages,\n    price: comics.prices[0].price,\n    pages: comics.pageCount,\n  });\n\n  return {\n    loading,\n    error,\n    getAllCharacters,\n    getCharacter,\n    getCharacterByName,\n    getRandomCharacter,\n    getAllComics,\n    getComics,\n    clearError,\n    isFallback,\n  };\n};\n\nexport default useMarvelService;\n"],"names":["Image","styled","img","_templateObject","_taggedTemplateLiteral","_jsx","src","error","alt","SingleCharacterWrapper","div","props","$loading","Name","h2","_templateObject2","Description","p","_templateObject3","Back","Link","_templateObject4","View","_ref","char","name","description","thumbnail","_jsxs","_Fragment","children","to","characterId","useParams","setChar","useState","loading","getCharacter","clearError","useMarvelService","useEffect","updateInfo","then","onInfoLoaded","Spinner","ErrorMessage","request","useHttp","setLoading","setError","useCallback","async","url","headers","method","arguments","length","undefined","body","headersOBJ","response","fetch","ok","Error","concat","status","data","json","e","message","isFallback","setIsFallBack","_API","base","fallback","key","process","fallbackKey","baseOffset","_transfromCharacter","_char$urls","_char$urls$","_char$urls2","_char$urls2$","_char$comics","id","path","extension","homepage","urls","wiki","comics","items","_transfromComics","title","language","textObjects","languages","price","prices","pages","pageCount","getAllCharacters","offset","limit","res","results","map","_unused","_unused2","getCharacterByName","_unused3","getRandomCharacter","Math","floor","random","_unused4","fallbackId","getAllComics","_unused5","getComics","_unused6"],"sourceRoot":""}